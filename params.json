{"name":"测试项目","tagline":"github测试","body":"# iLoveLovin\r\n#import \"ViewController.h\"\r\n#import <pthread.h>\r\n\r\n@interface ViewController ()\r\n\r\n@end\r\n\r\n@implementation ViewController\r\n\r\n- (void)viewDidLoad {\r\n    [super viewDidLoad];\r\n    // Do any additional setup after loading the view, typically from a nib.\r\n}\r\n\r\n- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event {\r\n    [self pthreadDemo];\r\n}\r\n\r\n// MARK: - pthread 演练\r\n// 创建线程，并且在线程中执行 demo 函数\r\n- (void)pthreadDemo {\r\n    /**\r\n     参数：\r\n     1> 指向线程标识符的指针，C 语言中类型的结尾通常 _t/Ref，而且不需要使用 *\r\n     2> 用来设置线程属性\r\n     3> 线程运行函数的起始地址\r\n     4> 运行函数的参数\r\n     \r\n     返回值：\r\n     - 若线程创建成功，则返回0\r\n     - 若线程创建失败，则返回出错编号\r\n     */\r\n    pthread_t threadId = NULL;\r\n    NSString *str = @\"Hello Pthread\";\r\n    int result = pthread_create(&threadId, NULL, demo, (__bridge void *)(str));\r\n    \r\n    if (result == 0) {\r\n        NSLog(@\"创建线程 OK\");\r\n    } else {\r\n        NSLog(@\"创建线程失败 %d\", result);\r\n    }\r\n}\r\n// 后台线程调用函数\r\nvoid *demo(void *params) {\r\n    NSString *str = (__bridge NSString *)(params);\r\n    \r\n    NSLog(@\"%@ - %@\", [NSThread currentThread], str);\r\n    \r\n    return NULL;\r\n}\r\n\r\n@end\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}